{"version":3,"file":"newtab.92958a91a63b8005ae13.hot-update.js","mappingssources":["webpack://Anichinu/./src/pages/Newtab/components/SettingsDrawer.tsx","webpack://Anichinu/webpack/runtime/getFullHash"],"sourcesContent":["var _a;\nvar _b;\n_b = $RefreshSig$();\nimport { ActionIcon, Card, Drawer, Group, SegmentedControl, Select, Stack, Switch, Text, Title, Tooltip, useComputedColorScheme, useMantineColorScheme, } from '@mantine/core';\nimport React from 'react';\nimport { InfoCircle, Moon, Settings, Sun } from 'tabler-icons-react';\nimport saveLocalstorage from '../util/saveLocalstorage';\nvar SettingsDrawer = function (_c) {\n    var settingsOpened = _c.settingsOpened, closeSettings = _c.closeSettings, showBackground = _c.showBackground, setshowBackground = _c.setshowBackground, showAnichinu = _c.showAnichinu, setshowAnichinu = _c.setshowAnichinu, imageCategory = _c.imageCategory, setimageCategory = _c.setimageCategory, animeRedirect = _c.animeRedirect, setanimeRedirect = _c.setanimeRedirect;\n    _b();\n    var sfwCategories = [\n        'waifu',\n        'oppai',\n        'maid',\n        'uniform',\n        'selfies',\n        'marin-kitagawa',\n    ];\n    var nsfwCategories = [\n        'ass',\n        'hentai',\n        'milf',\n        'oral',\n        'paizuri',\n        'ecchi',\n        'ero',\n        'waifu',\n        'oppai',\n        'uniform',\n    ];\n    var _d = useMantineColorScheme(), colorScheme = _d.colorScheme, setColorScheme = _d.setColorScheme;\n    var computedColorScheme = useComputedColorScheme('light', {\n        getInitialValueInEffect: true,\n    });\n    return (React.createElement(Drawer, { position: \"right\", opened: settingsOpened, onClose: closeSettings, size: 525 },\n        React.createElement(Group, { justify: \"center\", mb: 35 },\n            React.createElement(Settings, { size: 26, color: \"#228be6\" }),\n            React.createElement(Title, { order: 2, c: 'blue' }, \"Settings\")),\n        React.createElement(Stack, { align: \"center\", justify: \"space-between\", h: '100%' },\n            React.createElement(Card, { w: '100%', shadow: \"xs\", p: 15, radius: 'md', withBorder: true },\n                React.createElement(Group, { justify: \"space-between\" },\n                    React.createElement(Text, null, \"Show Background Image\"),\n                    React.createElement(Switch, { size: \"lg\", onLabel: \"ON\", offLabel: \"OFF\", checked: showBackground, onChange: function (event) {\n                            setshowBackground(event.currentTarget.checked);\n                            saveLocalstorage('anichinu-bg', event.currentTarget.checked);\n                        }, radius: 'md' }))),\n            React.createElement(Card, { w: '100%', shadow: \"xs\", p: 15, radius: 'md', withBorder: true },\n                React.createElement(Group, { w: '100%', justify: \"space-between\" },\n                    React.createElement(Text, null, \"Show Anichinu Section\"),\n                    React.createElement(Switch, { size: \"lg\", onLabel: \"ON\", offLabel: \"OFF\", checked: showAnichinu, onChange: function (event) {\n                            setshowAnichinu(event.currentTarget.checked);\n                            saveLocalstorage('anichinu-section', event.currentTarget.checked);\n                        }, radius: 'md' }))),\n            React.createElement(Card, { w: '100%', shadow: \"xs\", p: 15, radius: 'md', withBorder: true },\n                React.createElement(Group, { w: '100%', justify: \"space-between\" },\n                    React.createElement(Text, null, \"Image Category\"),\n                    React.createElement(Select, { value: imageCategory, onChange: function (val) {\n                            if (val) {\n                                setimageCategory(val);\n                                saveLocalstorage('animechinu-imgCategory', val);\n                            }\n                        }, variant: \"filled\", data: sfwCategories, maxDropdownHeight: 150, withScrollArea: false, styles: { dropdown: { maxHeight: 160, overflowY: 'auto' } } }))),\n            React.createElement(Card, { w: '100%', shadow: \"xs\", p: 15, radius: 'md', withBorder: true },\n                React.createElement(Group, { w: '100%', justify: \"space-between\" },\n                    React.createElement(Text, null, \"Color Theme\"),\n                    React.createElement(Tooltip, { label: colorScheme === 'light'\n                            ? 'Turn on Dark mode'\n                            : 'Turn on Light mode', position: \"left\", offset: 10, withArrow: true, arrowSize: 5 },\n                        React.createElement(ActionIcon, { onClick: function () {\n                                return setColorScheme(computedColorScheme === 'light' ? 'dark' : 'light');\n                            }, variant: \"default\", size: \"xl\", \"aria-label\": \"Toggle color scheme\" }, colorScheme == 'light' ? (React.createElement(Sun, { color: \"#FF5349\" })) : (React.createElement(Moon, { color: \"#228be6\" })))))),\n            React.createElement(Card, { w: '100%', shadow: \"xs\", p: 15, radius: 'md', withBorder: true },\n                React.createElement(Group, { w: '100%', justify: \"space-between\" },\n                    React.createElement(Text, null, \"Anime Redirect Site\"),\n                    React.createElement(SegmentedControl, { value: animeRedirect, onChange: function (val) {\n                            setanimeRedirect(val);\n                            saveLocalstorage('anichinu-redirect', val);\n                        }, color: \"blue\", data: [\n                            { label: 'Gogoanime', value: 'gogoanime' },\n                            { label: 'Aniwatch', value: 'aniwatch' },\n                        ] }))),\n            React.createElement(Card, { mt: 75, w: '100%', shadow: \"xs\", p: 15, radius: 'md', withBorder: true },\n                React.createElement(Group, { wrap: \"nowrap\", justify: \"center\" },\n                    React.createElement(InfoCircle, { size: 22, color: \"orange\" }),\n                    React.createElement(Text, { c: '#FFA500' }, \"Nsfw feature will be coming soon\"))),\n            React.createElement(Card, { w: '100%', shadow: \"xs\", p: 15, radius: 'md', withBorder: true },\n                React.createElement(Group, { w: '100%', justify: \"center\" },\n                    React.createElement(Text, null, \"Created By:\"),\n                    React.createElement(\"a\", { href: \"https://github.com/JawHawk\" }, \"Chinmay J\"))))));\n};\n_a = SettingsDrawer;\n$RefreshReg$(_a, \"SettingsDrawer\");\n_b(SettingsDrawer, \"+o3TVYzDjTu3Fb/81v/GkFo4aHc=\", false, function () { return [useMantineColorScheme, useComputedColorScheme]; });\nexport default SettingsDrawer;\n","__webpack_require__.h = () => (\"1afcc3589214567437ee\")"],"names":[],"sourceRoot":""}